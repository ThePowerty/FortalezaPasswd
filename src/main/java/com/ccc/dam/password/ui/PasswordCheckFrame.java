/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ccc.dam.password.ui;

import com.ccc.dam.password.Calificador;
import com.ccc.dam.password.Calificador.Fortaleza;
import com.ccc.dam.password.Configuracion;
import com.ccc.dam.password.puntuador.Puntuador;
import com.ccc.dam.password.puntuador.impl.PuntuadorCombinado;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Williams
 */
public class PasswordCheckFrame extends javax.swing.JFrame {
    
    private final Calificador calificador;
    private final Puntuador puntuadorCombinado;

    /**
     * Creates new form PasswordCheckFrame
     */
    public PasswordCheckFrame() {
        calificador = new Calificador(new Configuracion());
        puntuadorCombinado = new PuntuadorCombinado();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel passwordLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        javax.swing.JButton acceptButton = new javax.swing.JButton();
        strengthLabel = new javax.swing.JLabel();
        strengthProgress = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Comprobacion de Contraseña");
        setIconImage(getWindowIcon());
        setResizable(false);

        passwordLabel.setLabelFor(passwordTextField);
        passwordLabel.setText("Introduce tu Contraseña:");
        passwordLabel.setToolTipText("");
        passwordLabel.setName("passwordLabel"); // NOI18N
        passwordLabel.setOpaque(true);

        passwordTextField.setName("passwordField"); // NOI18N
        passwordTextField.setNextFocusableComponent(acceptButton);

        acceptButton.setText("Aceptar");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        strengthLabel.setToolTipText("");

        strengthProgress.setMaximum(10);
        strengthProgress.setToolTipText("");
        strengthProgress.setName("strengthProgress"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acceptButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passwordLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(strengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordTextField)
                            .addComponent(strengthProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(strengthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(strengthProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(acceptButton)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        checkPassword();
    }//GEN-LAST:event_acceptButtonActionPerformed

       
    private void setStrengthValues(Fortaleza fortaleza, int puntuacion) {
        
        
        if (fortaleza.getSeverity() < Fortaleza.MODERADA.getSeverity()) {
            strengthLabel.setForeground(Color.RED);
        } else if (fortaleza.getSeverity() == Fortaleza.MODERADA.getSeverity()) {
            strengthLabel.setBackground(Color.ORANGE);
        } else {
            strengthLabel.setForeground(Color.GREEN);
        }
        
        strengthLabel.setText(fortaleza.getDescription() + "(" + puntuacion + ")");
                        
        strengthProgress.setValue(puntuacion);
        
    }
    
    private boolean askForAcceptance() {
        int response = JOptionPane.showConfirmDialog(getRootPane(), 
                "Su contraseña es demasiado debil ¿desea aceptarla?", 
                "Confirmación de fortaleza", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        return response == JOptionPane.YES_OPTION;
    }
    
    
    private void checkPassword() {
        int puntuacion = puntuadorCombinado.apply(new String(passwordTextField.getPassword()));
        Calificador.Fortaleza fortaleza = calificador.calificar(puntuacion);        
        setStrengthValues(fortaleza, puntuacion);
        
        boolean acceptable = calificador.isAceptable(puntuacion);
        
        if (!acceptable) {
            acceptable = askForAcceptance();
        }
        
        String message;
        if (acceptable) {
            message = "Contraseña aceptada";
        } else {
            message = "Contraseña no aceptada";
        }
                                       
        JOptionPane.showMessageDialog(getRootPane(), message);
        
    }
    
    
    private Image getWindowIcon() {
        File path = new File("./src/main/resources/appIcon.png");
        ImageIcon icon = new ImageIcon(path.getAbsolutePath());
        return icon.getImage();
    }
    
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordCheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordCheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordCheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordCheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                                                                                
                new PasswordCheckFrame().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel strengthLabel;
    private javax.swing.JProgressBar strengthProgress;
    // End of variables declaration//GEN-END:variables
}
